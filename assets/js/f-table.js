let fDistribution = {
    // Numerator (df1) by key : Denominator (df2) by index
    
    1 : [161.4476,
18.5128,
10.1280,
7.7086,
6.6079,
5.9874,
5.5914,
5.3177,
5.1174,
4.9646,
4.8443,
4.7472,
4.6672,
4.6001,
4.5431,
4.4940,
4.4513,
4.4139,
4.3807,
4.3512,
4.3248,
4.3009,
4.2793,
4.2597,
4.2417,
4.2252,
4.2100,
4.1960,
4.1830,
4.1709,
4.0847,
4.0012,
3.9201],
    2 : [199.5000,
19.0000,
9.5521,
6.9443,
5.7861,
5.1433,
4.7374,
4.4590,
4.2565,
4.1028,
3.9823,
3.8853,
3.8056,
3.7389,
3.6823,
3.6337,
3.5915,
3.5546,
3.5219,
3.4928,
3.4668,
3.4434,
3.4221,
3.4028,
3.3852,
3.3690,
3.3541,
3.3404,
3.3277,
3.3158,
3.2317,
3.1504,
3.0718],
    3 : [215.7073,
19.1643,
9.2766,
6.5914,
5.4095,
4.7571,
4.3468,
4.0662,
3.8625,
3.7083,
3.5874,
3.4903,
3.4105,
3.3439,
3.2874,
3.2389,
3.1968,
3.1599,
3.1274,
3.0984,
3.0725,
3.0491,
3.0280,
3.0088,
2.9912,
2.9752,
2.9604,
2.9467,
2.9340,
2.9223,
2.8387,
2.7581,
2.6802],
    4 : [224.5832,
19.2468,
9.1172,
6.3882,
5.1922,
4.5337,
4.1203,
3.8379,
3.6331,
3.4780,
3.3567,
3.2592,
3.1791,
3.1122,
3.0556,
3.0069,
2.9647,
2.9277,
2.8951,
2.8661,
2.8401,
2.8167,
2.7955,
2.7763,
2.7587,
2.7426,
2.7278,
2.7141,
2.7014,
2.6896,
2.6060,
2.5252,
2.4472],
    5 : [230.1619,
19.2964,
9.0135,
6.2561,
5.0503,
4.3874,
3.9715,
3.6875,
3.4817,
3.3258,
3.2039,
3.1059,
3.0254,
2.9582,
2.9013,
2.8524,
2.8100,
2.7729,
2.7401,
2.7109,
2.6848,
2.6613,
2.6400,
2.6207,
2.6030,
2.5868,
2.5719,
2.5581,
2.5454,
2.5336,
2.4495,
2.3683,
2.2899],
    6 : [233.9860,
19.3295,
8.9406,
6.1631,
4.9503,
4.2839,
3.8660,
3.5806,
3.3738,
3.2172,
3.0946,
2.9961,
2.9153,
2.8477,
2.7905,
2.7413,
2.6987,
2.6613,
2.6283,
2.5990,
2.5727,
2.5491,
2.5277,
2.5082,
2.4904,
2.4741,
2.4591,
2.4453,
2.4324,
2.4205,
2.3359,
2.2541,
2.1750],
    7 : [236.7684,
19.3532,
8.8867,
6.0942,
4.8759,
4.2067,
3.7870,
3.5005,
3.2927,
3.1355,
3.0123,
2.9134,
2.8321,
2.7642,
2.7066,
2.6572,
2.6143,
2.5767,
2.5435,
2.5140,
2.4876,
2.4638,
2.4422,
2.4226,
2.4047,
2.3883,
2.3732,
2.3593,
2.3463,
2.3343,
2.2490,
2.1665,
2.0868],
    8 : [238.8827,
19.3710,
8.8452,
6.0410,
4.8183,
4.1468,
3.7257,
3.4381,
3.2296,
3.0717,
2.9480,
2.8486,
2.7669,
2.6987,
2.6408,
2.5911,
2.5480,
2.5102,
2.4768,
2.4471,
2.4205,
2.3965,
2.3748,
2.3551,
2.3371,
2.3205,
2.3053,
2.2913,
2.2783,
2.2662,
2.1802,
2.0970,
2.0164],
    9 : [240.5433,
19.3848,
8.8123,
5.9988,
4.7725,
4.0990,
3.6767,
3.3881,
3.1789,
3.0204,
2.8962,
2.7964,
2.7144,
2.6458,
2.5876,
2.5377,
2.4943,
2.4563,
2.4227,
2.3928,
2.3660,
2.3419,
2.3201,
2.3002,
2.2821,
2.2655,
2.2501,
2.2360,
2.2229,
2.2107,
2.1240,
2.0401,
1.9588],
    10 : [241.8817,
19.3959,
8.7855,
5.9644,
4.7351,
4.0600,
3.6365,
3.3472,
3.1373,
2.9782,
2.8536,
2.7534,
2.6710,
2.6022,
2.5437,
2.4935,
2.4499,
2.4117,
2.3779,
2.3479,
2.3210,
2.2967,
2.2747,
2.2547,
2.2365,
2.2197,
2.2043,
2.1900,
2.1768,
2.1646,
2.0772,
1.9926,
1.9105],
    12 : [243.9060,
19.4125,
8.7446,
5.9117,
4.6777,
3.9999,
3.5747,
3.2839,
3.0729,
2.9130,
2.7876,
2.6866,
2.6037,
2.5342,
2.4753,
2.4247,
2.3807,
2.3421,
2.3080,
2.2776,
2.2504,
2.2258,
2.2036,
2.1834,
2.1649,
2.1479,
2.1323,
2.1179,
2.1045,
2.0921,
2.0035,
1.9174,
1.8337],
    15 : [245.9499,
19.4291,
8.7029,
5.8578,
4.6188,
3.9381,
3.5107,
3.2184,
3.0061,
2.8450,
2.7186,
2.6169,
2.5331,
2.4630,
2.4034,
2.3522,
2.3077,
2.2686,
2.2341,
2.2033,
2.1757,
2.1508,
2.1282,
2.1077,
2.0889,
2.0716,
2.0558,
2.0411,
2.0275,
2.0148,
1.9245,
1.8364,
1.7505],
    20 : [248.0131,
19.4458,
8.6602,
5.8025,
4.5581,
3.8742,
3.4445,
3.1503,
2.9365,
2.7740,
2.6464,
2.5436,
2.4589,
2.3879,
2.3275,
2.2756,
2.2304,
2.1906,
2.1555,
2.1242,
2.0960,
2.0707,
2.0476,
2.0267,
2.0075,
1.9898,
1.9736,
1.9586,
1.9446,
1.9317,
1.8389,
1.7480,
1.6587],
    24 : [249.0518,
19.4541,
8.6385,
5.7744,
4.5272,
3.8415,
3.4105,
3.1152,
2.9005,
2.7372,
2.6090,
2.5055,
2.4202,
2.3487,
2.2878,
2.2354,
2.1898,
2.1497,
2.1141,
2.0825,
2.0540,
2.0283,
2.0050,
1.9838,
1.9643,
1.9464,
1.9299,
1.9147,
1.9005,
1.8874,
1.7929,
1.7001,
1.6084],
    30 : [250.0951,
19.4624,
8.6166,
5.7459,
4.4957,
3.8082,
3.3758,
3.0794,
2.8637,
2.6996,
2.5705,
2.4663,
2.3803,
2.3082,
2.2468,
2.1938,
2.1477,
2.1071,
2.0712,
2.0391,
2.0102,
1.9842,
1.9605,
1.9390,
1.9192,
1.9010,
1.8842,
1.8687,
1.8543,
1.8409,
1.7444,
1.6491,
1.5543],
    40 : [251.1432,
19.4707,
8.5944,
5.7170,
4.4638,
3.7743,
3.3404,
3.0428,
2.8259,
2.6609,
2.5309,
2.4259,
2.3392,
2.2664,
2.2043,
2.1507,
2.1040,
2.0629,
2.0264,
1.9938,
1.9645,
1.9380,
1.9139,
1.8920,
1.8718,
1.8533,
1.8361,
1.8203,
1.8055,
1.7918,
1.6928,
1.5943,
1.4952],
    60 : [252.1957,
19.4791,
8.5720,
5.6877,
4.4314,
3.7398,
3.3043,
3.0053,
2.7872,
2.6211,
2.4901,
2.3842,
2.2966,
2.2229,
2.1601,
2.1058,
2.0584,
2.0166,
1.9795,
1.9464,
1.9165,
1.8894,
1.8648,
1.8424,
1.8217,
1.8027,
1.7851,
1.7689,
1.7537,
1.7396,
1.6373,
1.5343,
1.4290],
    120 : [253.2529,
19.4874,
8.5494,
5.6581,
4.3985,
3.7047,
3.2674,
2.9669,
2.7475,
2.5801,
2.4480,
2.3410,
2.2524,
2.1778,
2.1141,
2.0589,
2.0107,
1.9681,
1.9302,
1.8963,
1.8657,
1.8380,
1.8128,
1.7896,
1.7684,
1.7488,
1.7306,
1.7138,
1.6981,
1.6835,
1.5766,
1.4673,
1.3519]
}
//let df1 = 10;
//let df2 = 5;

function fDistributionSelector (df1, df2){
    let x = df1;
    let y = df2;
    //console.log(x)
    // Arranging df1
    if (x === 11) {x = 12}
    else if (x === 13) {x = 12}
    else if (x === 14) {x = 15}
    else if (x === 16 || x === 17) {x = 15}
    else if (x === 18 || x === 19) {x = 20}
    else if (x === 21) {x = 20} 
    else if (x === 22 || x === 23) {x = 24}
    else if (x === 25 || x === 26) {x = 24}
    else if (x > 26 && x < 30) {x = 30}
    else if (x > 30 && x < 35) {x = 30}
    else if (x > 35 && x < 40) {x = 40}
    else if (x > 40 && x < 51) {x = 40} // Includes 40
    else if (x > 50 && x < 60) {x = 60}
    else if (x > 60 && x < 91) {x = 60}
    else if (x > 90 && x < 119) {x = 120}
    //console.log(x)
    
    // Arranging df2
    if (y > 30 && y < 35) {y = 30}
    else if (y > 35 && y < 40) {y = 40}
    else if (y > 40 && y < 51) {y = 40} // Includes 40
    else if (y > 50 && y < 60) {y = 60}
    else if (y > 60 && y < 91) {y = 60}
    else if (y > 90 && y < 119) {y = 120}
    //x = x+1;
    let fcrit = fDistribution[x][y-1];
    console.log("F crit is",fcrit);
    return fcrit;
}
/*
DF1
11 // 11 as 12
13-14 // 13 as 12, 14 as 15
16-19 // 16-17 as 15, 18-19 as 20
21-23 // 21 as 20, 22-23 as 24
25-29 // 25-26 as 24, 27-29 as 30
31-39 // 31 to 34 as 30, 35-39 as 40
41-59 // 41 to 50 as 40, 51 to 59 as 60
61-119 // 61 to 90 as 60, 91 to 119 as 120

DF2
31-39  // 31 to 34 as 30, 35 to 39 as 40
41-59 // 41 to 50 as 40, 51 to 59 as 60
61-119 // 61 to 90 as 60, 91 to 119 as 120

// -1 to account for indexing
*/
//console.log(fDistribution[1][2])